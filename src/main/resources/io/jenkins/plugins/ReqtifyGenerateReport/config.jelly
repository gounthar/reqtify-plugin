<?jelly escape-by-default='true'?>
<j:jelly xmlns:j="jelly:core" xmlns:html="jelly:html" xmlns:g="glide" xmlns:j2="null" xmlns:g2="null" xmlns:st="jelly:stapler" xmlns:d="jelly:define" xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:f="/lib/form" xmlns:c="/lib/credentials">
    <st:bind var="backend" value="${descriptor}"/>    
    <f:invisibleEntry>
		<f:textbox  field="lang" value="${%eng}" default="${%eng}"/>
     </f:invisibleEntry>
    <f:entry title="${%Report Name}" field="nameReport" help="/plugin/reqtify/help/ReqtifyGenerateReport/help-name.html">
		<f:textbox default="Report"/>
    </f:entry>
        
    <f:entry title="${%Report Model}" field="modelReport" help="/plugin/reqtify/help/ReqtifyGenerateReport/help-model.html">
      <f:select id="reports" onchange="getReportParameterValues()" />
      <script>
            var i = setInterval(function() { 
                var isPending = document.getElementById("reports").hasClassName("select-ajax-pending");
                if(!isPending) { clearInterval(i); showReqtifyError(); }
            }, 1000);                    
      </script>          
    </f:entry>

    <f:entry title="${%Report Template}" field="templateReport" help="/plugin/reqtify/help/ReqtifyGenerateReport/help-template.html">
      <f:select id="templates"/>
      <script>
            var i = setInterval(function() { 
                var isPending = document.getElementById("templates").hasClassName("select-ajax-pending");
                if(!isPending) { clearInterval(i); showReqtifyError(); }
            }, 1000);                    
      </script>          
    </f:entry>

    <f:entry field="reqtifyError">
        <div id="reqtifyErrorDiv"><span style="color:red;" id="reqtifyErrorSpan"></span></div>
    </f:entry>    
    
  <script>
         var url = window.location.pathname;
         var currentJob = url.match(new RegExp("job/(.*?)/"))[1];
         function getReportParameterValues() {
            var e = document.getElementById("reports");
            var functionName = e.options[e.selectedIndex].value;
            backend.renderReportParamUI(functionName,currentJob, function(htmlList){
                document.querySelectorAll(".report-param").forEach(el => el.remove());
                var myJSON = JSON.stringify(htmlList);
                var res = JSON.parse(myJSON);     
                var paramValues = JSON.parse(res.responseJSON);
                var tr = document.getElementById("reports").parentElement.parentElement;
                paramValues.forEach((html) => {
                  tr.insertAdjacentHTML('afterend', html);
                });    
                showReqtifyError();
            });
          }
        
          setTimeout(function() { 
                backend.getSavedReport(currentJob, function(reportName){
                if(reportName.responseJSON !== "") {
                    backend.renderReportParamUI(reportName.responseJSON,currentJob, function(htmlList){
                        document.querySelectorAll(".report-param").forEach(el => el.remove());
                        var myJSON = JSON.stringify(htmlList);
                        var res = JSON.parse(myJSON);     
                        var paramValues = JSON.parse(res.responseJSON);
                        var tr = document.getElementById("reports").parentElement.parentElement;
                        paramValues.forEach((html) => {
                          tr.insertAdjacentHTML('afterend', html);
                        });
                        showReqtifyError();
                    });                    
                }
          });     
        }, 1000);
          
          function showReqtifyError() {
            backend.getReqtifyError(function(reqtifyError){
                if(reqtifyError === undefined || reqtifyError === null) {
                    document.getElementById('reqtifyErrorDiv').style.display = 'none';   
                } else {
                    document.getElementById('reqtifyErrorDiv').style.display = 'block';
                    document.getElementById('reqtifyErrorSpan').innerHTML = reqtifyError.responseJSON;   
                }            
            });        
          }                
  </script>
</j:jelly>